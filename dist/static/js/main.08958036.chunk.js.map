{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProductList","projects","projects_ProjectSummary","Dashboard","_this$props","this","ProjectList","dashboard_Notifications","react_router","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","authorID","Date","error","App","layout_Navbar","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","concat","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.08958036.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => (\r\n    <div>\r\n    <ul className='right'>\r\n        <li><NavLink to='/create' >New Project</NavLink></li>\r\n            <li><NavLink to='/' onClick={props.signOut}>Log Out</NavLink></li>\r\n        <li><NavLink to='/' className='btn btn-floating white lighten-1 grey-text'>{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n    </div>\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signInUser = (credentials) =>{\r\n\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'})\r\n        }).catch((err)=>{\r\n\r\n            dispatch({type:'LOGIN_ERROR',err:err})\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err });\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => (\r\n  <div>\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\" className=\"white-text\">\r\n          Sign Up\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n            <NavLink to=\"/signin\" className='white-text'>Log In</NavLink>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport SignInLinks from './SignedInLinks';\r\nimport SignOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = (props)=>{\r\n    const {auth,profile} = props\r\n\r\n    const links = auth.uid ? <SignInLinks profile={profile} /> : <SignOutLinks />;\r\n    return(\r\n    <div className='navigation'>\r\n        <nav className='nav-wrapper black'>\r\n            <div className='container'>\r\n                <Link className='brand-logo' to='/'>Home</Link>\r\n                {links}\r\n\r\n            </div>\r\n        </nav>\r\n    </div>\r\n)\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth:state.firebase.auth,\r\n        profile:state.firebase.profile\r\n}\r\n\r\n} \r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props)=>\r\n{\r\n    const { notifications } = props;\r\n    return(\r\n    \r\n    <div className=\"section\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">Notifications</span>\r\n                <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return <li key={item.id}>\r\n                                <span className=\"pink-text\">{item.user} </span>\r\n                                <span>{item.content}</span>\r\n                                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n                            </li>\r\n                        })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project})=>{\r\n    \r\n    return(\r\n    <div className='card z-depth-0 project-summary'>\r\n        <div className='card-content grey-text text-darken-3'>\r\n            <span className='card-title'>{project.title}</span>\r\n            <p>Posted By {project.authorFirstName}{project.authorLastName}</p>\r\n                <p className='grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\nexport default ProjectSummary;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport ProjectSummary from './ProjectSummary';\r\nconst ProductList = ({projects})=>{\r\n \r\n return(\r\n        <div className='project-list section'>\r\n        {projects && projects.map((project)=>(\r\n            <Link to={'/project/' + project.id} key={project.id}>\r\n            <ProjectSummary project = {project} ></ProjectSummary>\r\n            </Link>\r\n        ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductList;","import React, { Component } from 'react';\r\n\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    state = {  }\r\n\r\n    render() { \r\n\r\n        //console.log(this.props)\r\n        \r\n        const {projects,auth,notifications} = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' /> \r\n        return ( \r\n        <div className='dashboard container'>\r\n            <div className='row'>\r\n                <div className='col s12 m6'><ProjectList projects = {projects}></ProjectList></div>\r\n                <div className='col s12 m5 offset-m1'>\r\n                <Notifications notifications = {notifications}>\r\n                </Notifications>\r\n                </div>\r\n            </div>\r\n        </div> );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    console.log(state)\r\n    return {\r\n        projects:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n\r\n}\r\n \r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{collection:'projects'},\r\n        { collection: 'notifications', limit: 3 }\r\n])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst ProjectDetails =(props)=>{\r\n\r\n    const { project,auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n    if(project){\r\n        return(\r\n        <div className='container section project-details'>\r\n            <div className='card z-depth-0'>\r\n                <div className='card-content'>\r\n                    <span className='card-title'>{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className='card-action grey lighten-4 grey-text'>\r\n                    <div>Posted By {project.authorFirstName}{project.authorLastName}</div>\r\n                    <div>2nd September, 2am</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n        <div className='container center'>\r\n            <p>Loading Project..</p>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project:project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps),\r\nfirestoreConnect([{collection:'projects'}])\r\n) (ProjectDetails);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signInUser} from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {email:null,password:null  }\r\n\r\n\r\n    handleChange =(e)=>{\r\n        \r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n\r\n    }\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        console.log(this.props.signIn(this.state));\r\n    }\r\n    render() \r\n    { \r\n        const {authError,auth} = this.props;\r\n        if (auth.uid) return <Redirect to='/' /> \r\n        return ( \r\n        <div className='container'>\r\n            <form onSubmit={this.handleSubmit} className='white'>\r\n                <h5 className='black-text darken-3'>Sign In</h5>\r\n                <div className='input-field'>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input type='email' id='email' onChange={this.handleChange}></input>\r\n                </div>\r\n\r\n                    <div className='input-field'>\r\n                        <label htmlFor='password'>password</label>\r\n                        <input type='password' id='password' onChange={this.handleChange}></input>\r\n                    </div>\r\n                     <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Login</button>\r\n                        <div className='red-text center'>\r\n                        {authError ? <p>{authError}</p>:null}\r\n                        </div>\r\n                    </div>\r\n            </form>\r\n        </div> );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        authError:state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n \r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        signIn:(creds) => dispatch(signInUser(creds))\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = { email: null, password: null,firstName:null,lastName:null }\r\n\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n      this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n      const { auth ,authError} = this.props;\r\n      if (auth.uid) return <Redirect to='/' /> \r\n        return (\r\n          <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n              <h5 className=\"black-text\">Sign Up</h5>\r\n                <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n                    <div className=\"input-field\">\r\n                <label htmlFor=\"password\">password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"lastName\">lastName</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"lastName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">firstName</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"firstName\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n              <div className=\"input-field\">\r\n                <button className=\"btn pink lighten-1 z-depth-0\">\r\n                  Login\r\n                </button>\r\n                <div className=\"center red-text\">\r\n                  {authError ? <p>{authError}</p> : null}\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (creds) => dispatch(signUp(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = { \r\n        title:'',\r\n        content:''\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' /> \r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                    <h5 className='black-text darken-3'>Create New Project</h5>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='title'>Title</label>\r\n                        <input type='text' id='title' onChange={this.handleChange}></input>\r\n                    </div>\r\n\r\n                    <div className='input-field'>\r\n                        <label htmlFor='content'>Project Content</label>\r\n                        <textarea className='materialize-textarea' id='content' onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>);\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        createProject:(project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);","export const createProject = (project)=>{\r\n    return (dispatch,getState,{getFirebase,getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorID: authorId,\r\n            createdAt:new Date()\r\n        }).then(()=>{\r\n            dispatch({\r\n                type: 'CREATE_PROJECT',\r\n                project: project\r\n            })\r\n        }).catch((err)=>{\r\n            dispatch({\r\n                type: 'CREATE_PROJECT_ERROR',\r\n                error: err\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n};","import React from 'react';\nimport { BrowserRouter,Switch,Route } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n      <Navbar></Navbar>\n      <Switch>\n        <Route exact path='/' component={Dashboard}></Route>\n        <Route path='/signin' component={SignIn}></Route>\n        <Route path='/signup' component={SignUp}></Route>\n        <Route path='/create' component={CreateProject}></Route>\n        <Route path='/project/:id' component={ProjectDetails}></Route>\n      </Switch>\n\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError:null\r\n}\r\n\r\nconst authReducer = (state = initState ,action)=>{ \r\n\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state\r\n        \r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\nprojects:[\r\n        {id:1,title:'help me find peach',content:'Something Amazing'},\r\n         { id: 2, title: 'help me find peach', content: 'Something Amazing' },\r\n         { id: 3, title: 'help me find peach', content: 'Something Amazing' },\r\n]\r\n\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('Project Creaeted',action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create_project_error',action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBtdN-9kxrVpDC-DuZeC4uEl1qd8nT8OTk\",\r\n    authDomain: \"projectmanagement-redux.firebaseapp.com\",\r\n    databaseURL: \"https://projectmanagement-redux.firebaseio.com\",\r\n    projectId: \"projectmanagement-redux\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"652690129280\",\r\n    appId: \"1:652690129280:web:3367d00c9320149b\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware,compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore,getFirestore } from 'redux-firestore';\nimport { getFirebase,reactReduxFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig';\n\n\nconst store = createStore(rootReducer,compose(applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users',attachAuthIsReady:true}),\n    reduxFirestore(fbConfig)\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.register();\n});"],"sourceRoot":""}